{
    "name": "archive",
    "displayName": "Archive",
    "description": "A Pulumi package for creating and managing Archive cloud resources.",
    "keywords": [
        "pulumi",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com/",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`archive` Terraform Provider](https://github.com/terraform-providers/terraform-provider-archive).",
    "repository": "https://github.com/pulumi/pulumi-archive",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-archive/sdk/go/archive",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Archive cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-archive)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-archive` repo](https://github.com/pulumi/pulumi-archive/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-archive` repo](https://github.com/terraform-providers/terraform-provider-archive/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^16.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-archive)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-archive` repo](https://github.com/pulumi/pulumi-archive/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-archive` repo](https://github.com/terraform-providers/terraform-provider-archive/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {},
    "types": {
        "archive:index/FileSource:FileSource": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Add this content to the archive with `filename` as the filename.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "Set this as the filename when declaring a `source`.\n"
                }
            },
            "type": "object",
            "required": [
                "content",
                "filename"
            ]
        },
        "archive:index/getFileSource:getFileSource": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Add this content to the archive with `filename` as the filename.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "Set this as the filename when declaring a `source`.\n"
                }
            },
            "type": "object",
            "required": [
                "content",
                "filename"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the archive package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "archive:index/file:File": {
            "description": "**NOTE**: This resource is deprecated, use data source instead.\n",
            "properties": {
                "excludeSymlinkDirectories": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether symbolically linked directories should be excluded during the creation of the archive. Defaults to `false`.\n"
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify files to ignore when reading the `source_dir`.\n"
                },
                "outputBase64sha256": {
                    "type": "string",
                    "description": "Base64 Encoded SHA256 checksum of output file\n"
                },
                "outputBase64sha512": {
                    "type": "string",
                    "description": "Base64 Encoded SHA512 checksum of output file\n"
                },
                "outputFileMode": {
                    "type": "string",
                    "description": "String that specifies the octal file mode for all archived files. For example: `\"0666\"`. Setting this will ensure that cross platform usage of this module will not vary the modes of archived files (and ultimately checksums) resulting in more deterministic behavior.\n"
                },
                "outputMd5": {
                    "type": "string",
                    "description": "MD5 of output file\n"
                },
                "outputPath": {
                    "type": "string",
                    "description": "The output of the archive file.\n"
                },
                "outputSha": {
                    "type": "string",
                    "description": "SHA1 checksum of output file\n"
                },
                "outputSha256": {
                    "type": "string",
                    "description": "SHA256 checksum of output file\n"
                },
                "outputSha512": {
                    "type": "string",
                    "description": "SHA512 checksum of output file\n"
                },
                "outputSize": {
                    "type": "integer",
                    "description": "The byte size of the output archive file.\n"
                },
                "sourceContent": {
                    "type": "string",
                    "description": "Add only this content to the archive with `source_content_filename` as the filename. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceContentFilename": {
                    "type": "string",
                    "description": "Set this as the filename when using `source_content`. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceDir": {
                    "type": "string",
                    "description": "Package entire contents of this directory into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceFile": {
                    "type": "string",
                    "description": "Package this file into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/archive:index/FileSource:FileSource"
                    },
                    "description": "Specifies attributes of a single source file to include into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of archive to generate. NOTE: `zip` is supported.\n"
                }
            },
            "required": [
                "outputBase64sha256",
                "outputBase64sha512",
                "outputMd5",
                "outputPath",
                "outputSha",
                "outputSha256",
                "outputSha512",
                "outputSize",
                "type"
            ],
            "inputProperties": {
                "excludeSymlinkDirectories": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether symbolically linked directories should be excluded during the creation of the archive. Defaults to `false`.\n"
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify files to ignore when reading the `source_dir`.\n"
                },
                "outputFileMode": {
                    "type": "string",
                    "description": "String that specifies the octal file mode for all archived files. For example: `\"0666\"`. Setting this will ensure that cross platform usage of this module will not vary the modes of archived files (and ultimately checksums) resulting in more deterministic behavior.\n"
                },
                "outputPath": {
                    "type": "string",
                    "description": "The output of the archive file.\n"
                },
                "sourceContent": {
                    "type": "string",
                    "description": "Add only this content to the archive with `source_content_filename` as the filename. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceContentFilename": {
                    "type": "string",
                    "description": "Set this as the filename when using `source_content`. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceDir": {
                    "type": "string",
                    "description": "Package entire contents of this directory into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sourceFile": {
                    "type": "string",
                    "description": "Package this file into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/archive:index/FileSource:FileSource"
                    },
                    "description": "Specifies attributes of a single source file to include into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of archive to generate. NOTE: `zip` is supported.\n"
                }
            },
            "requiredInputs": [
                "outputPath",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering File resources.\n",
                "properties": {
                    "excludeSymlinkDirectories": {
                        "type": "boolean",
                        "description": "Boolean flag indicating whether symbolically linked directories should be excluded during the creation of the archive. Defaults to `false`.\n"
                    },
                    "excludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify files to ignore when reading the `source_dir`.\n"
                    },
                    "outputBase64sha256": {
                        "type": "string",
                        "description": "Base64 Encoded SHA256 checksum of output file\n"
                    },
                    "outputBase64sha512": {
                        "type": "string",
                        "description": "Base64 Encoded SHA512 checksum of output file\n"
                    },
                    "outputFileMode": {
                        "type": "string",
                        "description": "String that specifies the octal file mode for all archived files. For example: `\"0666\"`. Setting this will ensure that cross platform usage of this module will not vary the modes of archived files (and ultimately checksums) resulting in more deterministic behavior.\n"
                    },
                    "outputMd5": {
                        "type": "string",
                        "description": "MD5 of output file\n"
                    },
                    "outputPath": {
                        "type": "string",
                        "description": "The output of the archive file.\n"
                    },
                    "outputSha": {
                        "type": "string",
                        "description": "SHA1 checksum of output file\n"
                    },
                    "outputSha256": {
                        "type": "string",
                        "description": "SHA256 checksum of output file\n"
                    },
                    "outputSha512": {
                        "type": "string",
                        "description": "SHA512 checksum of output file\n"
                    },
                    "outputSize": {
                        "type": "integer",
                        "description": "The byte size of the output archive file.\n"
                    },
                    "sourceContent": {
                        "type": "string",
                        "description": "Add only this content to the archive with `source_content_filename` as the filename. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceContentFilename": {
                        "type": "string",
                        "description": "Set this as the filename when using `source_content`. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceDir": {
                        "type": "string",
                        "description": "Package entire contents of this directory into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceFile": {
                        "type": "string",
                        "description": "Package this file into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/archive:index/FileSource:FileSource"
                        },
                        "description": "Specifies attributes of a single source file to include into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of archive to generate. NOTE: `zip` is supported.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "archive:index/getFile:getFile": {
            "description": "Generates an archive from content, a file, or directory of files.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFile.\n",
                "properties": {
                    "excludeSymlinkDirectories": {
                        "type": "boolean",
                        "description": "Boolean flag indicating whether symbolically linked directories should be excluded during the creation of the archive. Defaults to `false`.\n"
                    },
                    "excludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify files to ignore when reading the `source_dir`.\n"
                    },
                    "outputFileMode": {
                        "type": "string",
                        "description": "String that specifies the octal file mode for all archived files. For example: `\"0666\"`. Setting this will ensure that cross platform usage of this module will not vary the modes of archived files (and ultimately checksums) resulting in more deterministic behavior.\n"
                    },
                    "outputPath": {
                        "type": "string",
                        "description": "The output of the archive file.\n"
                    },
                    "sourceContent": {
                        "type": "string",
                        "description": "Add only this content to the archive with `source_content_filename` as the filename. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceContentFilename": {
                        "type": "string",
                        "description": "Set this as the filename when using `source_content`. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceDir": {
                        "type": "string",
                        "description": "Package entire contents of this directory into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sourceFile": {
                        "type": "string",
                        "description": "Package this file into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/archive:index/getFileSource:getFileSource"
                        },
                        "description": "Specifies attributes of a single source file to include into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of archive to generate. NOTE: `zip` is supported.\n"
                    }
                },
                "type": "object",
                "required": [
                    "outputPath",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFile.\n",
                "properties": {
                    "excludeSymlinkDirectories": {
                        "description": "Boolean flag indicating whether symbolically linked directories should be excluded during the creation of the archive. Defaults to `false`.\n",
                        "type": "boolean"
                    },
                    "excludes": {
                        "description": "Specify files to ignore when reading the `source_dir`.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The sha1 checksum hash of the output.\n",
                        "type": "string"
                    },
                    "outputBase64sha256": {
                        "description": "Base64 Encoded SHA256 checksum of output file\n",
                        "type": "string"
                    },
                    "outputBase64sha512": {
                        "description": "Base64 Encoded SHA512 checksum of output file\n",
                        "type": "string"
                    },
                    "outputFileMode": {
                        "description": "String that specifies the octal file mode for all archived files. For example: `\"0666\"`. Setting this will ensure that cross platform usage of this module will not vary the modes of archived files (and ultimately checksums) resulting in more deterministic behavior.\n",
                        "type": "string"
                    },
                    "outputMd5": {
                        "description": "MD5 of output file\n",
                        "type": "string"
                    },
                    "outputPath": {
                        "description": "The output of the archive file.\n",
                        "type": "string"
                    },
                    "outputSha": {
                        "description": "SHA1 checksum of output file\n",
                        "type": "string"
                    },
                    "outputSha256": {
                        "description": "SHA256 checksum of output file\n",
                        "type": "string"
                    },
                    "outputSha512": {
                        "description": "SHA512 checksum of output file\n",
                        "type": "string"
                    },
                    "outputSize": {
                        "description": "The byte size of the output archive file.\n",
                        "type": "integer"
                    },
                    "sourceContent": {
                        "description": "Add only this content to the archive with `source_content_filename` as the filename. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n",
                        "type": "string"
                    },
                    "sourceContentFilename": {
                        "description": "Set this as the filename when using `source_content`. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n",
                        "type": "string"
                    },
                    "sourceDir": {
                        "description": "Package entire contents of this directory into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n",
                        "type": "string"
                    },
                    "sourceFile": {
                        "description": "Package this file into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n",
                        "type": "string"
                    },
                    "sources": {
                        "description": "Specifies attributes of a single source file to include into the archive. One and only one of `source`, `source_content_filename` (with `source_content`), `source_file`, or `source_dir` must be specified.\n",
                        "items": {
                            "$ref": "#/types/archive:index/getFileSource:getFileSource"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "The type of archive to generate. NOTE: `zip` is supported.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "outputBase64sha256",
                    "outputBase64sha512",
                    "outputMd5",
                    "outputPath",
                    "outputSha",
                    "outputSha256",
                    "outputSha512",
                    "outputSize",
                    "type"
                ],
                "type": "object"
            }
        }
    }
}